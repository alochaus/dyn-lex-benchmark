var new_body
set new_body = func (x, y, z, vx, vy, vz, mass) {
    @[
        (:x, x),
        (:y, y),
        (:z, z),
        (:vx, vx),
        (:vy, vy),
        (:vz, vz),
        (:mass, mass),
    ]
}

var offset_momentum
set offset_momentum = func (bodies) {
    var n = #bodies
    var px = 0.0
    var py = 0.0
    var pz = 0.0

    var i = 0
    loop {
        break if (i == n)
        var bi = bodies[i]
        var bim = bi[:mass]

        set px = px + (bi[:vx] * bim)
        set py = py + (bi[:vy] * bim)
        set pz = pz + (bi[:vz] * bim)
        set i = i + 1
    }

    var sun = bodies[0]
    var solar_mass = sun[:mass]
    set sun[:vx] = sun[:vx] - (px / solar_mass)
    set sun[:vy] = sun[:vy] - (py / solar_mass)
    set sun[:vz] = sun[:vz] - (pz / solar_mass)
}

var advance
set advance = func (bodies, dt) {
    var n = #bodies
    var i = 0
    loop {
        break if (i == n)
        var bi = bodies[i]
        
        var j = i + 1
        loop {
            break if (j == n)
            var bj = bodies[j]
            var dx = bi[:x] - bj[:x]
            var dy = bi[:y] - bj[:y]
            var dz = bi[:z] - bj[:z]

            var dist = ((dx*dx) + ((dy*dy) + (dz*dz)))*(1/2)
            var mag = dt / (dist * dist * dist)

            var bjm = bj[:mass] * mag
            set bi[:vx] = bi[:vx] - (dx * bjm)
            set bi[:vy] = bi[:vy] - (dy * bjm)
            set bi[:vz] = bi[:vz] - (dz * bjm)

            var bim = bi[:mass] * mag
            set bj[:vx] = bj[:vx] + (dx * bim)
            set bj[:vy] = bj[:vy] + (dy * bim)
            set bj[:vz] = bj[:vz] + (dz * bim)

            set j = j + 1
        }
        set i = i + 1
    }

    var k = 0
    loop {
        break if (k == n)
        var bi = bodies[k]

        set bi[:x] = bi[:x] + (dt * bi[:vx])
        set bi[:y] = bi[:y] + (dt * bi[:vy])
        set bi[:z] = bi[:z] + (dt * bi[:vz])

        set k = k + 1
    }
}

var advance_multiple_steps
set advance_multiple_steps = func (nsteps, bodies, dt) {
    var i = 0
    loop {
        break if (i == nsteps)
        advance(bodies, dt)
        set i = i + 1
    }
}

var energy
set energy = func (bodies) {
    var n = #bodies
    var e = 0.0
    var i = 0
    loop {
        break if (i == n)
        var bi = bodies[i]
        var vx = bi[:vx]
        var vy = bi[:vy]
        var vz = bi[:vz]
        set e = (e) + (0.5 * (bi[:mass] * ((vx*vx) + ((vy*vy) + (vz*vz)))))

        var j = i + 1
        loop {
            break if (j == n)
            var bj = bodies[j]
            var dx = bi[:x] - bj[:x]
            var dy = bi[:y] - bj[:y]
            var dz = bi[:z] - bj[:z]
            var distance = ((dx*dx) + (dy*dy) + (dz*dz))*(1/2)
            set e = e - ((bi[:mass] * bj[:mass]) / distance)

            set j = j + 1
        }
        set i = i + 1
    }
    e
}

var PI = 3.141592653589793
var SOLAR_MASS = 4 * PI * PI
var DAYS_PER_YEAR = 365.24
var bodies = #[
    new_body(
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    SOLAR_MASS),
    new_body(
    4.84143144246472090,
   -1.16032004402742839,
   -0.103622044471123109,
    0.00166007664274403694 * DAYS_PER_YEAR,
    0.00769901118419740425 * DAYS_PER_YEAR,
   -0.0000690460016972063023 * DAYS_PER_YEAR,
    0.000954791938424326609 * SOLAR_MASS ),
    new_body(
    8.34336671824457987,
    4.12479856412430479,
   -0.403523417114321381,
   -0.00276742510726862411 * DAYS_PER_YEAR,
    0.00499852801234917238 * DAYS_PER_YEAR,
    0.0000230417297573763929 * DAYS_PER_YEAR,
    0.000285885980666130812 * SOLAR_MASS ),
    new_body(
    12.8943695621391310,
   -15.1111514016986312,
   -0.223307578892655734,
    0.00296460137564761618 * DAYS_PER_YEAR,
    0.00237847173959480950 * DAYS_PER_YEAR,
   -0.0000296589568540237556 * DAYS_PER_YEAR,
    0.0000436624404335156298 * SOLAR_MASS ),



    new_body(
        1.537969711485091650,
       -2.591931460998796410,
        0.179258772950371181,
        0.00268067772490389322 * DAYS_PER_YEAR,
        0.00162824170038242295 * DAYS_PER_YEAR,
       -0.0000951592254519715870 * DAYS_PER_YEAR,
        0.0000515138902046611451 * SOLAR_MASS ),
]

var main
set main = func (N) {
    offset_momentum(bodies)
    println(energy(bodies))
    advance_multiple_steps(N, bodies, 0.01)
    println(energy(bodies))
}

main(50000000)